@using Kendo.Mvc.UI
@using StudentInternshipManagement.Models.Entities
@{
    ViewBag.Title = "Quản lý Admin";
    ViewBag.Category = "Quản lý";
    ViewBag.Section = "Admin";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Kendo
{
    @Styles.Render("~/Content/kendo/styles")
    @Scripts.Render("~/Scripts/kendo/scripts")
}



@(Html.Kendo().Grid<Admin>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Id).Hidden(true);
          columns.Bound(c => c.AdminCode);
          columns.Bound(c => c.AdminName);
          columns.Bound(c => c.BirthDate);
          columns.Bound(c => c.Address);
          columns.Bound(c => c.Phone);
          columns.ForeignKey(p => p.DepartmentId, (IQueryable<Department>) ViewBag.Departments, "DepartmentId", "DepartmentName").EditorTemplateName("DepartmentTemplate");
          columns.Command(command =>
          {
              command.Edit();
              command.Destroy();
          }).Width(180);
      })
      .ToolBar(toolbar => { toolbar.Create(); })
      .Editable(editable => editable.Mode(GridEditMode.PopUp))
      .Pageable()
      .Sortable(sortable => { sortable.SortMode(GridSortMode.SingleColumn); })
      .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("Admins_Read", "Admin"))
          .Create(create => create.Action("Admins_Create", "Admin"))
          .Update(update => update.Action("Admins_Update", "Admin"))
          .Destroy(destroy => destroy.Action("Admins_Destroy", "Admin"))
      )
      .Events(events => events
          .Edit("onEdit")
      ))

<script type="text/javascript">

    function onEdit(e) {
        if (!e.model.isNew()) {
            $('[name="Id"]').attr("readonly", true);
        }
    }
</script>