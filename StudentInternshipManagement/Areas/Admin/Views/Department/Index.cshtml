@using Kendo.Mvc.UI
@using Models
@{
    ViewBag.Title = "Quản lý Khoa/Viện";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Kendo
{
    @Styles.Render("~/Content/kendo")
    @Scripts.Render("~/Script/kendo")
}

<div class="main-content-inner">
    <div class="breadcrumbs" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <i class="ace-icon fa fa-home home-icon"></i>
                <a href="#">Trang chủ</a>
            </li>
            <li class="active">Quản lý</li>
        </ul><!-- /.breadcrumb -->

        <div class="nav-search" id="nav-search">
            <form class="form-search">
                <span class="input-icon">
                    <input type="text" placeholder="Search ..." class="nav-search-input" id="nav-search-input" autocomplete="off" />
                    <i class="ace-icon fa fa-search nav-search-icon"></i>
                </span>
            </form>
        </div><!-- /.nav-search -->
    </div>

    <div class="page-content">
        <div class="page-header">
            <h1>
                Quản lý
                <small>
                    <i class="ace-icon fa fa-angle-double-right"></i>
                    Khoa/Viện
                </small>
            </h1>
        </div><!-- /.page-header -->
        <div class="row">
            <div class="col-xs-12">
                @(Html.Kendo().Grid<Models.Department>()
                      .Name("grid")
                      .Columns(columns =>
                      {
                          columns.Bound(c => c.DepartmentId);
                          columns.Bound(c => c.DepartmentName);
                          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
                      })
                      .ToolBar(toolbar =>
                      {
                          toolbar.Create();
                      })
                      .Editable(editable => editable.Mode(GridEditMode.PopUp))
                      .Pageable()
                      .Sortable(sortable =>
                      {
                          sortable.SortMode(GridSortMode.SingleColumn);
                      })
                      .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
                      .Scrollable()
                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .Model(model => model.Id(p => p.DepartmentId))
                          .Read(read => read.Action("Departments_Read", "Department"))
                          .Create(create => create.Action("Departments_Create", "Department"))
                          .Update(update => update.Action("Departments_Update", "Department"))
                          .Destroy(destroy => destroy.Action("Departments_Destroy", "Department"))
                      )
                      .Events(events => events
                          .Edit("onEdit")
                      )
                      )
            </div><!-- /.page-content -->
        </div>
    </div>
</div>
<script type="text/javascript">

    function onEdit(e) {
        $('[name="DepartmentId"]').attr("readonly", true);
    }
</script>