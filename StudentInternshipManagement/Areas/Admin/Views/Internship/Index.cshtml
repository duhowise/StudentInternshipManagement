@using Kendo.Mvc.UI
@using Models
@{
    ViewBag.Title = "Quản lý thực tập";
    ViewBag.Category = "Quản lý";
    ViewBag.Section = "Thực tập";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var isProcessing = (bool) (ViewBag.IsProcessing??false);
}

@section Kendo
{
    @Styles.Render("~/Content/kendo")
    @Scripts.Render("~/Script/kendo")
}
<div class="alert alert-block alert-info" style='display: @(isProcessing?"inline-block":"none")'>
    <button type="button" class="close" data-dismiss="alert">
        <i class="ace-icon fa fa-times"></i>
    </button>
    <i class="ace-icon fa fa-check green"></i>
    Đang xử lý nguyện vọng thực tập kỳ
    <strong class="green">
        20181
    </strong>
    <br/>
    Xin vui lòng đợi trong giây lát!
</div>

<div class="alert alert-block alert-success" style='display: @(isProcessing?"none":"inline-block")'>
    <button type="button" class="close" data-dismiss="alert">
        <i class="ace-icon fa fa-times"></i>
    </button>
    <i class="ace-icon fa fa-check green"></i>
    Xử lý nguyện vọng thực tập kỳ
    <strong class="green">
        20181
    </strong>
    thành công
    <br />
    Xem kết quả ở bảng dưới
</div>

@(Html.Kendo().Grid<Models.Internship>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.InternshipId);
          columns.ForeignKey(p => p.StudentId, (IQueryable<Student>) ViewBag.Students, "StudentId", "StudentName");
          columns.ForeignKey(p => p.ClassId, (IQueryable<LearningClass>)ViewBag.LearningClasses, "ClassId", "ClassName");
          columns.ForeignKey(p => p.TrainingMajorId, (IQueryable<TrainingMajor>)ViewBag.TrainingMajors, "TrainingMajorId", "TrainingMajorName");
          columns.ForeignKey(p => p.CompanyId, (IQueryable<Company>)ViewBag.Companies, "CompanyId", "CompanyName");
          columns.Bound(c => c.RegistrationDate);
          columns.Bound(c => c.Status);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Pdf();
      })
      .Pageable()
      .Sortable(sortable => { sortable.SortMode(GridSortMode.SingleColumn); })
      .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.InternshipId))
          .Read(read => read.Action("Internships_Read", "Internship"))
      )
      )

