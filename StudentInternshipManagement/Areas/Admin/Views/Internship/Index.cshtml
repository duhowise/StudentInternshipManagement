@using Kendo.Mvc.UI
@using Models
@using StudentInternshipManagement.Areas.Admin.Models
@{
    ViewBag.Title = "Internship Manager";
    ViewBag.Category = "Manage";
    ViewBag.Section = "Internship";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var isProcessing = (bool?) (ViewBag.IsProcessing);
    var semester = (int)(ViewBag.Semester);
}

@section Kendo
{
    @Styles.Render("~/Content/kendo/2018.2.516/styles")
    @Scripts.Render("~/Scripts/kendo/2018.2.516/scripts")
}

<button class="btn btn-primary" style='display: @(isProcessing==null?"inline-block":"none")' onclick="location.href='@Url.Action("Process", "Internship")'">
    <i class="ace-icon fa fa-flask align-top bigger-125"></i>
    Handling internship aspirations 
    </button>

<div class="alert alert-block alert-info" style='display: @(isProcessing==true?"inline-block":"none")'>
    <button type="button" class="close" data-dismiss="alert">
        <i class="ace-icon fa fa-times"></i>
    </button>
    <i class="ace-icon fa fa-check green"></i>
    Processing request for internship period
    <strong class="green">
        @semester
    </strong>
    <br />
    Please wait a moment! 
</div>

<div class="alert alert-block alert-success" style='display: @(isProcessing==false?"inline-block":"none")'>
    <button type="button" class="close" data-dismiss="alert">
        <i class="ace-icon fa fa-times"></i>
    </button>
    <i class="ace-icon fa fa-check green"></i>
    Handling internship requests
    <strong class="green">
        @semester
    </strong>
    success
    <br />
    See the results in the table below
</div>

@(Html.Kendo().Grid<InternshipViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(p => p.Student);
          columns.Bound(p => p.Class);
          columns.Bound(p => p.TrainingMajor);
          columns.Bound(p => p.Company);
          columns.Bound(c => c.RegistrationDate);
          columns.Bound(c => c.Status);
          columns.Bound(c => c.MidTermPoint);
          columns.Bound(c => c.EndTermPoint);
          columns.Bound(c => c.TotalPoint);
          columns.Bound(c => c.Group);
          columns.Bound(c => c.Teacher);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Pdf().Text("Export report");
      })
      .Pageable()
      .Sortable(sortable => { sortable.SortMode(GridSortMode.SingleColumn); })
      .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.InternshipId))
          .Read(read => read.Action("Internships_Read", "Internship"))
      )
      )

